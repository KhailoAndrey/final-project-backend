{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Your Pet",
    "description": "API for Your Pet application"
  },
  "security": [
    {
      "Bearer": []
    }
  ],
  "consumes": ["application/json", "mulripart/form-data"],
  "produces": ["application/json"],
  "servers": [
    { "url": "https://final-project-backend-4o0r.onrender.com" },
    { "url": "https://localhost:3001" }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Users endpoints"
    },
    {
      "name": "Notices",
      "description": "Notices endpoints"
    },
    {
      "name": "Pets",
      "description": "Pets endpoints"
    }
  ],
  "paths": {
    "/api/users/register": {
      "post": {
        "tags": ["Users"],
        "summary": "New user registration",
        "produces": ["application/json"],
        "requestBody": {
          "description": "The request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The user is registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "The JWT access token"
                    },
                    "user": {
                      "$ref": "#/components/schemas/UserResponse"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body"
          },
          "409": {
            "description": "Email in use"
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "tags": ["Users"],
        "summary": "User log in",
        "produces": ["application/json"],
        "requestBody": {
          "description": "The request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "The JWT access token"
                    },
                    "user": {
                      "$ref": "#/components/schemas/UserResponse"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body"
          },
          "401": {
            "description": "The email or password is incorrect"
          }
        }
      }
    },
    "/api/users/logout": {
      "post": {
        "tags": ["Users"],
        "summary": "User logout",
        "security": [{ "Bearer": [] }],
        "produces": ["application/json"],
        "responses": {
          "204": {
            "description": "Successful user logout"
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/api/users/": {
      "put": {
        "tags": ["Users"],
        "summary": "Update user data",
        "security": [{ "Bearer": [] }],
        "produces": ["application/json"],
        "requestBody": {
          "description": "Request to update user data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Data updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/UpdateUserResponse"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/users/avatar": {
      "patch": {
        "tags": ["Users"],
        "summary": "Changing the user's avatar",
        "security": [{ "Bearer": [] }],
        "produces": ["application/json"],
        "requestBody": {
          "description": "Request user's avatar change",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string"
                  },
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User avatar updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserAvatarResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "Get data current user",
        "security": [{ "Bearer": [] }],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Current user data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUser"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },

    "/api/notices": {
      "get": {
        "tags": ["Notices"],
        "summary": "Get notices",
        "security": [{ "Bearer": [] }],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Notice"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unusersorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": ["Notices"],
        "summary": "Add new notice",
        "security": [{ "Bearer": [] }],
        "produces": ["application/json"],
        "requestBody": {
          "description": "Notice data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Notice"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Notice added",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notice"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "example": {
                  "message": "Invalid token"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/notices/{id}": {
      "delete": {
        "tags": ["Notices"],
        "summary": "Delete a notices by id",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Notice's id to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Notice deleted successfully"
          },
          "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Notice not found"
          }
        }
      }
    },
    "/api/notices/favorite/add/{id}": {
      "patch": {
        "tags": ["Notices"],
        "summary": "Add notice to favorite",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "description": "Notice's id"
          }
        ],
        "responses": {
          "200": {
            "description": "Notice add to favorite successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Favorites"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Notice not found"
          }
        }
      }
    },
    "/api/notices/favorite/delete/{id}": {
      "patch": {
        "tags": ["Notices"],
        "summary": "Add notice to favorite",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "description": "Notice's id"
          }
        ],
        "responses": {
          "200": {
            "description": "Notice deleted from favorites"
          },
          "401": {
            "description": "Not authorized"
          },
          "404": {
            "description": "Notice not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User name",
            "example": "Qwerty"
          },
          "email": {
            "type": "string",
            "description": "User email",
            "format": "email",
            "example": "qwerty@mail.com"
          },
          "password": {
            "type": "string",
            "description": "User password",
            "example": "Qwerty111"
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User name",
            "example": "Qwerty"
          },
          "email": {
            "type": "string",
            "description": "User email",
            "example": "qwerty@mail.com"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User email",
            "example": "qwerty@mail.com"
          },
          "password": {
            "type": "string",
            "description": "User password",
            "example": "Qwerty111"
          }
        }
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User name",
            "example": "Mango"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday",
            "example": "21-08-2010",
            "default": ""
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "+380671234567",
            "default": ""
          },
          "city": {
            "type": "string",
            "description": "User's city",
            "example": "Lviv",
            "default": ""
          }
        }
      },
      "UpdateUserResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "User id",
            "example": "1259385yjvdsa95kf865098"
          },
          "avatarURL": {
            "type": "string",
            "description": "User photo"
          },
          "name": {
            "type": "string",
            "description": "User name",
            "example": "Mango"
          },
          "email": {
            "type": "string",
            "description": "User email",
            "example": "qwerty@mail.com"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday",
            "example": "21-08-2010",
            "default": ""
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "+380671234567",
            "default": ""
          },
          "city": {
            "type": "string",
            "description": "User's city",
            "example": "Lviv",
            "default": ""
          },
          "token": {
            "type": "string",
            "description": "The JWT access token"
          },
          "createdAt": {
            "type": "Date",
            "description": "User account creation date",
            "example": "2023-07-23T20:00:30.149+00:00"
          },
          "updatedAt": {
            "type": "Date",
            "description": "The date of the last update of the user's account",
            "example": "2023-07-23T22:28:45.862+00:00"
          }
        }
      },
      "UpdateUserAvatarRequest": {
        "type": "object",
        "required": ["avatarURL"],
        "properties": {
          "_id": {
            "type": "string",
            "description": "User id",
            "example": "64497f45555522a6cae4e577"
          },
          "avatarURL": {
            "type": "string",
            "description": "User photo"
          }
        }
      },
      "UpdateUserAvatarResponse": {
        "type": "object",
        "properties": {
          "avatarURL": {
            "type": "string",
            "description": "User photo"
          }
        }
      },
      "CurrentUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User name",
            "example": "Mango"
          },
          "email": {
            "type": "string",
            "description": "User email",
            "example": "mango@mail.com"
          },
          "birthday": {
            "type": "string",
            "description": "User's birthday",
            "example": "21-08-2010",
            "default": ""
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "+380671234567",
            "default": ""
          },
          "city": {
            "type": "string",
            "description": "User's city",
            "example": "Lviv",
            "default": ""
          },
          "avatarURL": {
            "type": "string",
            "description": "User photo"
          },
          "pets": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "User's pet name",
                  "example": "Caty"
                },
                "date": {
                  "type": "string",
                  "description": "User's pet birthday",
                  "example": "29-08-2020"
                },
                "type": {
                  "type": "string",
                  "description": "User's pet type",
                  "example": "Cat"
                },
                "file": {
                  "type": "string",
                  "description": "User's pet photo"
                },
                "comments": {
                  "type": "string",
                  "description": "User's comments"
                },
                "_id": {
                  "type": "string",
                  "description": "User's pet id",
                  "example": "32143dshtuv2dfyuijhgf45474"
                }
              }
            }
          },
          "favorite": {
            "type": "array",
            "items": {
              "type": "string",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "User's favorite notice id",
                  "example": "32143dshtuv2dfyuijhgf45474"
                }
              }
            }
          }
        }
      },

      "Notice": {
        "type": "object",
        "required": [
          "title",
          "category",
          "name",
          "date",
          "type",
          "file",
          "sex",
          "location"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "Notice id",
            "example": "64bd8b3616d78dc14eaadec4"
          },
          "title": {
            "type": "string",
            "description": "The title of the notices",
            "example": "Lost Cat in Central Park"
          },
          "category": {
            "type": "string",
            "description": "The category of the notices",
            "example": "lost-found",
            "enum": ["sell", "lost-found", "for-free"]
          },
          "name": {
            "type": "string",
            "description": "User's pet name",
            "example": "Caty"
          },
          "date": {
            "type": "string",
            "description": "User's pet birthday",
            "example": "29-08-2020"
          },
          "type": {
            "type": "string",
            "description": "User's pet type",
            "example": "Cat"
          },
          "file": {
            "type": "string",
            "description": "User's pet photo"
          },
          "sex": {
            "type": "string",
            "description": "The pet's sex",
            "example": "male",
            "enum": ["male", "female"]
          },
          "location": {
            "type": "string",
            "description": "The pet's location",
            "example": "Kyiv"
          },
          "comments": {
            "type": "string",
            "description": "User's comments"
          },
          "price": {
            "type": "number",
            "description": "Pet's price"
          },
          "owner": {
            "type": "string",
            "description": "The id of the user who owns the notices",
            "example": "64bd86de7f96cefd06432c5d"
          }
        }
      },
      "Favorites": {
        "type": "array",
        "items": {
          "type": "string",
          "properties": {
            "_id": {
              "type": "string",
              "description": "User's favorite notice id",
              "example": "32143dshtuv2dfyuijhgf45474"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
